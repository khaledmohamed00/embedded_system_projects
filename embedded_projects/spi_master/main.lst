   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.startup,"ax",@progbits
  11               	.global	main
  13               	main:
  14               	.LFB0:
  15               		.file 1 "main.c"
   1:main.c        **** /*#define F_CPU 1000000UL
   2:main.c        **** #include<avr/io.h>
   3:main.c        **** #include<util/delay.h>
   4:main.c        **** #include<avr/interrupt.h>
   5:main.c        **** #include"spi.h"
   6:main.c        **** */
   7:main.c        **** /*int main (void)
   8:main.c        **** {DDRD=0xff;
   9:main.c        ****     char data=0x00;
  10:main.c        ****     spi_master_init();
  11:main.c        ****   
  12:main.c        ****     while(1)
  13:main.c        ****     {
  14:main.c        ****       
  15:main.c        **** PORTD=spi_send_receive(data++);    
  16:main.c        **** 
  17:main.c        **** }
  18:main.c        **** }
  19:main.c        **** 
  20:main.c        **** */
  21:main.c        **** 
  22:main.c        **** 
  23:main.c        **** /*
  24:main.c        **** volatile unsigned char data=0x00;
  25:main.c        **** int main(void){
  26:main.c        **** DDRD=0xff;
  27:main.c        **** DDRB |=(1<<2)|(1<<3)|(1<<5);
  28:main.c        **** DDRB &=~(1<<4);
  29:main.c        **** SPCR |=(1<<MSTR);
  30:main.c        **** SPCR |=(1<<SPR0)|(1<<SPR1);
  31:main.c        **** //SPCR |=(1<SPIE);
  32:main.c        **** SPCR |=(1<<SPE);
  33:main.c        **** 
  34:main.c        **** //sei();
  35:main.c        **** 
  36:main.c        **** while(1){
  37:main.c        **** //if ((SPSR & (1<<SPIF)) > 0)
  38:main.c        **** //spi_send_receive(data++);
  39:main.c        **** //SPDR=data++;
  40:main.c        **** //while(!(SPSR & (1<<SPIF)));
  41:main.c        **** //_delay_ms(50);
  42:main.c        **** 
  43:main.c        **** unsigned char a=spi_send_receive(data++);
  44:main.c        **** }
  45:main.c        **** }*/
  46:main.c        **** #define F_CPU 1000000UL
  47:main.c        **** #include <avr/io.h>
  48:main.c        **** #include <avr/interrupt.h>
  49:main.c        **** 
  50:main.c        **** volatile unsigned char data;
  51:main.c        **** 
  52:main.c        **** int main (void)
  53:main.c        **** {
  16               		.loc 1 53 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22               	.LVL0:
  54:main.c        ****    unsigned char value=0x00;
  55:main.c        **** 
  56:main.c        ****     DDRB |= (1<<2)|(1<<3)|(1<<5);    // SCK, MOSI and SS as outputs
  23               		.loc 1 56 0
  24 0000 87B3      		in r24,0x17
  25 0002 8C62      		ori r24,lo8(44)
  26 0004 87BB      		out 0x17,r24
  57:main.c        ****     DDRB &= ~(1<<4);                 // MISO as input
  27               		.loc 1 57 0
  28 0006 BC98      		cbi 0x17,4
  58:main.c        **** 
  59:main.c        ****     SPCR |= (1<<MSTR);               // Set as Master
  29               		.loc 1 59 0
  30 0008 6C9A      		sbi 0xd,4
  60:main.c        ****     SPCR |= (1<<SPR0)|(1<<SPR1);     // divided clock by 128
  31               		.loc 1 60 0
  32 000a 8DB1      		in r24,0xd
  33 000c 8360      		ori r24,lo8(3)
  34 000e 8DB9      		out 0xd,r24
  61:main.c        ****     SPCR |= (1<<SPIE);               // Enable SPI Interrupt    
  35               		.loc 1 61 0
  36 0010 6F9A      		sbi 0xd,7
  62:main.c        ****     SPCR |= (1<<SPE);                // Enable SPI
  37               		.loc 1 62 0
  38 0012 6E9A      		sbi 0xd,6
  54:main.c        **** 
  39               		.loc 1 54 0
  40 0014 80E0      		ldi r24,0
  41               	.LVL1:
  42               	.L3:
  63:main.c        **** 
  64:main.c        **** 
  65:main.c        ****    // sei();    
  66:main.c        **** 
  67:main.c        ****     while(1)
  68:main.c        ****     {
  69:main.c        ****        // if ((SPSR & (1<<SPIF)) )  // checks to see if the SPI bit is clear
  70:main.c        ****             SPDR=value++;              // send the data
  43               		.loc 1 70 0
  44 0016 91E0      		ldi r25,lo8(1)
  45 0018 980F      		add r25,r24
  46               	.LVL2:
  47 001a 8FB9      		out 0xf,r24
  48               	.L2:
  49               		.loc 1 70 0 is_stmt 0
  50 001c 892F      		mov r24,r25
  71:main.c        ****             while(!(SPSR & (1<<SPIF)) );
  51               		.loc 1 71 0 is_stmt 1
  52 001e 779B      		sbis 0xe,7
  53 0020 00C0      		rjmp .L2
  54               	.LVL3:
  55 0022 00C0      		rjmp .L3
  56               		.cfi_endproc
  57               	.LFE0:
  59               		.comm	data,1,1
  60               		.text
  61               	.Letext0:
  62               		.file 2 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cciYPjfR.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/cciYPjfR.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/cciYPjfR.s:4      *ABS*:000000000000003f __SREG__
     /tmp/cciYPjfR.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cciYPjfR.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/cciYPjfR.s:13     .text.startup:0000000000000000 main
                            *COM*:0000000000000001 data

UNDEFINED SYMBOLS
__do_clear_bss
