Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o (exit)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
LOAD main.o
LOAD i2c.o
LOAD EEPROM_24c16b.o
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/libatmega8.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x188
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000032        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x0000000000000036        0x2 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000036                __vector_1
                0x0000000000000036                __vector_12
                0x0000000000000036                __bad_interrupt
                0x0000000000000036                __vector_6
                0x0000000000000036                __vector_3
                0x0000000000000036                __vector_11
                0x0000000000000036                __vector_13
                0x0000000000000036                __vector_17
                0x0000000000000036                __vector_7
                0x0000000000000036                __vector_5
                0x0000000000000036                __vector_4
                0x0000000000000036                __vector_9
                0x0000000000000036                __vector_2
                0x0000000000000036                __vector_15
                0x0000000000000036                __vector_8
                0x0000000000000036                __vector_14
                0x0000000000000036                __vector_10
                0x0000000000000036                __vector_16
                0x0000000000000036                __vector_18
 .text          0x0000000000000038        0x0 main.o
 .text          0x0000000000000038       0xc4 i2c.o
                0x0000000000000038                i2c_init_master
                0x0000000000000046                i2c_start
                0x0000000000000052                i2c_stop
                0x0000000000000058                i2c_write_master_ack
                0x0000000000000066                i2c_read_master_ack
                0x000000000000007c                i2c_init_slave
                0x0000000000000088                i2c_send_slave_ack
                0x0000000000000096                i2c_receive_slave_ack
                0x00000000000000ac                i2c_listen_slave
                0x00000000000000b4                i2c_write_master_nack
                0x00000000000000c2                i2c_read_master_nack
                0x00000000000000d8                i2c_send_slave_nack
                0x00000000000000e6                i2c_receive_slave_nack
 .text          0x00000000000000fc       0x5c EEPROM_24c16b.o
                0x00000000000000fc                EEPROM_read
                0x000000000000012e                EEPROM_write
 .text          0x0000000000000158        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000158                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000158       0x2c main.o
                0x0000000000000158                main
 .text.libgcc.mul
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000184                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000184        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                0x0000000000000184                exit
                0x0000000000000184                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000184        0x4 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000188                _etext = .

.data           0x0000000000800060        0x0 load address 0x0000000000000188
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 main.o
 .data          0x0000000000800060        0x0 i2c.o
 .data          0x0000000000800060        0x0 EEPROM_24c16b.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800060                . = ALIGN (0x2)
                0x0000000000800060                _edata = .
                0x0000000000800060                PROVIDE (__data_end, .)

.bss            0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x0000000000800060        0x0 main.o
 .bss           0x0000000000800060        0x0 i2c.o
 .bss           0x0000000000800060        0x0 EEPROM_24c16b.o
 .bss           0x0000000000800060        0x0 /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800060                PROVIDE (__bss_end, .)
                0x0000000000000188                __data_load_start = LOADADDR (.data)
                0x0000000000000188                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800060        0x0
                0x0000000000800060                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800060                PROVIDE (__noinit_end, .)
                0x0000000000800060                _end = .
                0x0000000000800060                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 i2c.o
 .comment       0x0000000000000011       0x12 EEPROM_24c16b.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 i2c.o
 .debug_aranges
                0x0000000000000040       0x20 EEPROM_24c16b.o

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x412
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x10a main.o
 .debug_info    0x000000000000010a      0x23a i2c.o
 .debug_info    0x0000000000000344       0xce EEPROM_24c16b.o

.debug_abbrev   0x0000000000000000      0x1dc
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xc4 main.o
 .debug_abbrev  0x00000000000000c4       0xa2 i2c.o
 .debug_abbrev  0x0000000000000166       0x76 EEPROM_24c16b.o

.debug_line     0x0000000000000000      0x164
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x8b main.o
 .debug_line    0x000000000000008b       0x90 i2c.o
 .debug_line    0x000000000000011b       0x49 EEPROM_24c16b.o

.debug_frame    0x0000000000000000      0x16c
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x24 main.o
 .debug_frame   0x0000000000000024       0xe4 i2c.o
 .debug_frame   0x0000000000000108       0x64 EEPROM_24c16b.o

.debug_str      0x0000000000000000      0x29a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x164 main.o
                                        0x198 (size before relaxing)
 .debug_str     0x0000000000000164      0x105 i2c.o
                                        0x246 (size before relaxing)
 .debug_str     0x0000000000000269       0x31 EEPROM_24c16b.o
                                        0x16a (size before relaxing)

.debug_loc      0x0000000000000000      0x232
 *(.debug_loc)
 .debug_loc     0x0000000000000000       0x13 main.o
 .debug_loc     0x0000000000000013      0x113 i2c.o
 .debug_loc     0x0000000000000126      0x10c EEPROM_24c16b.o

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
EEPROM_read                                       EEPROM_24c16b.o
                                                  main.o
EEPROM_write                                      EEPROM_24c16b.o
                                                  main.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__heap_end                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__init                                            /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__stack                                           /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_1                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_10                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_11                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_12                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_13                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_14                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_15                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_16                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_17                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_18                                       /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_2                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_3                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_4                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_5                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_6                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_7                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_8                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_9                                        /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vector_default                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
__vectors                                         /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
_exit                                             /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.9.2/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
i2c_init_master                                   i2c.o
                                                  main.o
i2c_init_slave                                    i2c.o
i2c_listen_slave                                  i2c.o
i2c_read_master_ack                               i2c.o
i2c_read_master_nack                              i2c.o
                                                  EEPROM_24c16b.o
i2c_receive_slave_ack                             i2c.o
i2c_receive_slave_nack                            i2c.o
i2c_send_slave_ack                                i2c.o
i2c_send_slave_nack                               i2c.o
i2c_start                                         i2c.o
                                                  EEPROM_24c16b.o
i2c_stop                                          i2c.o
                                                  EEPROM_24c16b.o
i2c_write_master_ack                              i2c.o
i2c_write_master_nack                             i2c.o
                                                  EEPROM_24c16b.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr4/crtatmega8.o
